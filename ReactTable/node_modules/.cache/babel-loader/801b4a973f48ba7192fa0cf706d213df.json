{"ast":null,"code":"var _jsxFileName = \"/Users/saltmer/Desktop/crud-ui/src/Form.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport JsonData from './data.json';\n\nfunction createForm() {\n  const [addFormData, setAddFormData] = useState({\n    id: JsonData.keys(JsonData).length + 1,\n    Name: \"\",\n    City: \"\"\n  });\n\n  const addForm = event => {\n    // отмена события\n    event.preventDefault(); // нужно для того чтобы при нажатии на кнопку страница не обновлялась\n\n    const fieldName = event.target.getAttribute('name');\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    }; // копирует с возсожностью расширения\n\n    newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n\n    setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    required: \"required\",\n    placeholder: \"Your name\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    required: \"required\",\n    placeholder: \"Your city\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Add\")));\n}\n\nexport default createForm;","map":{"version":3,"sources":["/Users/saltmer/Desktop/crud-ui/src/Form.js"],"names":["React","useState","JsonData","createForm","addFormData","setAddFormData","id","keys","length","Name","City","addForm","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,SAASC,UAAT,GAAqB;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAC7C;AACAK,IAAAA,EAAE,EAAEJ,QAAQ,CAACK,IAAT,CAAcL,QAAd,EAAwBM,MAAxB,GAAiC,CADrC;AAEAC,IAAAA,IAAI,EAAE,EAFN;AAGAC,IAAAA,IAAI,EAAE;AAHN,GAD6C,CAA9C;;AAOA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AAC1B;AACAA,IAAAA,KAAK,CAACC,cAAN,GAF0B,CAEF;;AAExB,UAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAlB;AACA,UAAMC,UAAU,GAAGL,KAAK,CAACG,MAAN,CAAaG,KAAhC;AAEA,UAAMC,WAAW,GAAG,EAAC,GAAGf;AAAJ,KAApB,CAP0B,CAOY;;AACtCe,IAAAA,WAAW,CAACL,SAAD,CAAX,GAAyBG,UAAzB,CAR0B,CAQW;;AAErCZ,IAAAA,cAAc,CAACc,WAAD,CAAd,CAV0B,CAUG;AAC7B,GAXD;;AAYA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAC,UAAxC;AAAmD,IAAA,WAAW,EAAC,WAA/D;AAA2E,IAAA,QAAQ,EAAER,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA8B,IAAA,QAAQ,EAAC,UAAvC;AAAkD,IAAA,WAAW,EAAC,WAA9D;AAAyE,IAAA,QAAQ,EAAEA,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHD,CADD,CADD;AAaA;;AAED,eAAeR,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport JsonData from './data.json';\n\nfunction createForm(){\n\tconst [addFormData, setAddFormData] = useState(\n\t\t{\n\t\tid: JsonData.keys(JsonData).length + 1,\n\t\tName: \"\",\n\t\tCity: \"\",\n\t\t}\n\t)\n\tconst addForm = (event) => {\n\t\t// отмена события\n\t\tevent.preventDefault(); // нужно для того чтобы при нажатии на кнопку страница не обновлялась\n\t\n\t\tconst fieldName = event.target.getAttribute('name'); \n\t\tconst fieldValue = event.target.value;\n\t\n\t\tconst newFormData = {...addFormData}; // копирует с возсожностью расширения\n\t\tnewFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n\t\n\t\tsetAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n\t}\n\treturn(\n\t\t<div>\n\t\t\t<form>\n\t\t\t\t<input type=\"text\" name=\"name\" required=\"required\" placeholder='Your name' onChange={addForm}/>\n\t\t\t\t<input type=\"text\" name=\"city\"required=\"required\" placeholder='Your city'onChange={addForm}/>\n\t\t\t\t<button type=\"submit\">Add</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n\n\n\n\n}\n\nexport default createForm;"]},"metadata":{},"sourceType":"module"}