{"ast":null,"code":"var _jsxFileName = \"/Users/saltmer/Desktop/crud-ui/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { deleteDataServ, putDataServ, getDataServ } from './components/ServerFunc.js';\nimport Table from './components/Table.js';\nimport Form from './components/Form.js';\naxios.defaults.baseURL = 'http://178.128.196.163:3000/api/records/';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [addFormData, setAddFormData] = useState({\n    name: \"\",\n    age: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    // вызывается один раз\n    getDataServ().then(result => setContacts(result));\n  }, []);\n\n  const addFormSubmit = event => {\n    event.preventDefault(); // нужно для того чтобы при нажатии на кнопку страница не обновлялась\n\n    const newRow = {\n      data: {\n        name: addFormData.name,\n        age: addFormData.age,\n        email: addFormData.email\n      }\n    };\n    let res = putDataServ(newRow); // посылаем на сервер наше новое значение\n\n    res.then(result => {\n      const newCont = [...contacts, result];\n      setContacts(newCont);\n    });\n  };\n\n  const deleteFunc = contactId => {\n    let del = deleteDataServ(contactId);\n    let newArr = contacts.filter(function (value) {\n      if (value._id !== contactId) return value;\n    });\n    setContacts(newArr);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  }, \"MyApp Table\"), /*#__PURE__*/React.createElement(Table, {\n    contacts: contacts,\n    deleteFunc: deleteFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Add a contact\"), /*#__PURE__*/React.createElement(Form, {\n    addForm: addForm,\n    addFormSubmit: addFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saltmer/Desktop/crud-ui/src/App.js"],"names":["React","useEffect","useState","axios","deleteDataServ","putDataServ","getDataServ","Table","Form","defaults","baseURL","App","contacts","setContacts","addFormData","setAddFormData","name","age","email","then","result","addFormSubmit","event","preventDefault","newRow","data","res","newCont","deleteFunc","contactId","del","newArr","filter","value","_id","addForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,cAAR,EAAwBC,WAAxB,EAAqCC,WAArC,QAAuD,4BAAvD;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEAL,KAAK,CAACM,QAAN,CAAeC,OAAf,GAAyB,0CAAzB;;AAEA,SAASC,GAAT,GACA;AACE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAC5C;AACEc,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,GAAG,EAAE,EAFP;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAD4C,CAA9C;AAQAjB,EAAAA,SAAS,CAAC,MAAK;AAAE;AACfK,IAAAA,WAAW,GAAGa,IAAd,CAAmBC,MAAM,IAAIP,WAAW,CAACO,MAAD,CAAxC;AACD,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMC,aAAa,GAAIC,KAAD,IACtB;AACEA,IAAAA,KAAK,CAACC,cAAN,GADF,CACyB;;AAEvB,UAAMC,MAAM,GACZ;AACEC,MAAAA,IAAI,EACJ;AACET,QAAAA,IAAI,EAAEF,WAAW,CAACE,IADpB;AAEEC,QAAAA,GAAG,EAAEH,WAAW,CAACG,GAFnB;AAGEC,QAAAA,KAAK,EAAEJ,WAAW,CAACI;AAHrB;AAFF,KADA;AAUA,QAAIQ,GAAG,GAAGrB,WAAW,CAACmB,MAAD,CAArB,CAbF,CAaiC;;AAC/BE,IAAAA,GAAG,CAACP,IAAJ,CAASC,MAAM,IACb;AACE,YAAMO,OAAO,GAAG,CAAC,GAAGf,QAAJ,EAAcQ,MAAd,CAAhB;AACAP,MAAAA,WAAW,CAACc,OAAD,CAAX;AACD,KAJH;AAKD,GApBD;;AAsBA,QAAMC,UAAU,GAAIC,SAAD,IACnB;AACC,QAAIC,GAAG,GAAG1B,cAAc,CAACyB,SAAD,CAAxB;AAEC,QAAIE,MAAM,GAAGnB,QAAQ,CAACoB,MAAT,CAAgB,UAASC,KAAT,EAAgB;AAC3C,UAAIA,KAAK,CAACC,GAAN,KAAcL,SAAlB,EACE,OAAOI,KAAP;AACH,KAHY,CAAb;AAIApB,IAAAA,WAAW,CAACkB,MAAD,CAAX;AACD,GATD;;AAWE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,eAEM,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEnB,QAAjB;AAA2B,IAAA,UAAU,EAAEgB,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEO,OAAf;AAAwB,IAAA,aAAa,EAAEd,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAQH;;AAED,eAAeV,GAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport {deleteDataServ, putDataServ, getDataServ} from './components/ServerFunc.js';\nimport Table from './components/Table.js';\nimport Form from './components/Form.js';\n\naxios.defaults.baseURL = 'http://178.128.196.163:3000/api/records/';\n\nfunction App()\n{\n  const [contacts, setContacts] = useState([]);\n\n  const [addFormData, setAddFormData] = useState(\n    {\n      name: \"\",\n      age: \"\",\n      email: \"\",\n    }\n  );\n\n  useEffect(()=> { // вызывается один раз\n    getDataServ().then(result => setContacts(result));\n  }, []);\n\n\n  const addFormSubmit = (event) => \n  {\n    event.preventDefault();// нужно для того чтобы при нажатии на кнопку страница не обновлялась\n\n    const newRow = \n    {\n      data :\n      {\n        name: addFormData.name,\n        age: addFormData.age,\n        email: addFormData.email,\n      },\n    };\n\n    let res = putDataServ(newRow); // посылаем на сервер наше новое значение\n    res.then(result => \n      {\n        const newCont = [...contacts, result];\n        setContacts(newCont);\n      });\n  };\n\n  const deleteFunc = (contactId) => \n  {\n   let del = deleteDataServ(contactId);\n\n    let newArr = contacts.filter(function(value) {\n      if (value._id !== contactId)\n        return value;\n    });\n    setContacts(newArr);\n  };\n\n    return (\n      <div className=\"container\">\n         <h1>MyApp Table</h1> \n            <Table contacts={contacts} deleteFunc={deleteFunc}/>\n          <h2>Add a contact</h2>\n          <Form addForm={addForm} addFormSubmit={addFormSubmit}/>\n      </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}