{"ast":null,"code":"var _jsxFileName = \"/Users/saltmer/Desktop/crud-ui/src/App.js\";\n// import React, { Component , useState} from 'react';\n// import axios from 'axios';\n// import './App.css';\n// // import JsonDataDisplay from './Table.js';\n// // import Table from './Table.js';\n// import JsonData from './data.json'; // https://api.jsonserve.com/1ekkzf\n// // import PersonList from './PersonList.js';\n// // import Form from './Form.js';\n// function App() {\n//   // axios\n//   // .get('https://api.coindesk.com/v1/bpi/currentprice.json')\n//   // .then(response => (this.info = response));\n// //   var state = {\n// //     persons: []\n// //   };\n// //   var data;\n// //   const API = `http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`\n// // let temp;\n// // const fetchResult = fetch(API).then((res) => res.json()).then((data) => {temp = data});\n// // console.log(temp);\n//   // var FunctionName = async() => {\n//   //   const api_call = await fetch(`http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`);\n//   //   data = await api_call.json();\n//   //   console.log(data);\n//   //   return (data);\n//   //   }\n//   //   data = FunctionName();\n//   //   console.log(data);\n//   // const response = fetch(` http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`);\n//   //   const data = response.json();\n//     // axios.get(`http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`)\n//     //   .then(res => {\n//     //     const persons = res.data;\n//     //     this.setState({ persons });\n//     //   });\n//       // console.log(data);\n//   const [contacts, setContacts] = useState(JsonData);\n//   const [addFormData, setAddFormData] = useState(\n//     {\n//     id: \"\",\n//     name: \"\",\n//     city: \"\",\n//     }\n//   );\n//   const addForm = (event) => {\n//     event.preventDefault();  // отмена события\n//     const fieldName = event.target.getAttribute('name'); \n//     const fieldValue = event.target.value;\n//     const newFormData = {...addFormData}; // копирует с возсожностью расширения\n//     newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n//     setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n//   };\n//   const addFormSubmit = (event) => {\n//     event.preventDefault();// нужно для того чтобы при нажатии на кнопку страница не обновлялась\n//     // console.log(Object.keys(JsonData).length);\n//     const newRow = {\n//       id: Object.keys(contacts).length + 1,\n//       name: addFormData.name,\n//       city: addFormData.city,\n//     };\n//     const newContact = [...contacts, newRow]; // добавляем в массив contacts новую строку\n//     setContacts(newContact); // обновляем данные\n//     // console.log(newContact);\n//     // console.log(contacts);\n//   };\n//   // render() {\n//     return (\n//       <div className=\"container\">\n//          <h1>MyApp Table</h1> \n//           {/* <Table /> */}\n//           <div>\n//             <table className=\"table table-striped\">\n//                 <thead>\n//                     <tr>\n//                     <th>ID</th>\n//                     <th>Name</th>\n//                     <th>City</th>\n//                     </tr>\n//                 </thead>\n//                  <tbody>\n//                     {contacts.map((info)=>(\n//                     <tr key={info.id}>\n//                         <td>{info.id}</td>\n//                         <td>{info.name}</td>\n//                         <td>{info.city}</td>\n//                         <button>Delete</button>\n//                     </tr>\n//                       ))}\n//                 </tbody>\n//                 {/* <PersonList/> */}\n//             </table>\n//         </div>\n//           <h2>Add a contact</h2>\n//           <form className='form-inline' onSubmit={addFormSubmit}>\n//             <input type=\"text\" name=\"name\" className='form-control' required=\"required\" placeholder='Your name' onChange={addForm}/>\n//             <input type=\"text\" name=\"city\" className='form-control' required=\"required\" placeholder='Your city' onChange={addForm}/>\n//             <button type=\"submit\" className='btn btn-primary' >Add</button>\n// \t\t\t     </form>\n//       </div>\n//     );\n//   // }\n// }\n// export default App;\nimport PersonList from './components/PersonList.js';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ClassName: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PersonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/saltmer/Desktop/crud-ui/src/App.js"],"names":["PersonList","App"],"mappingsuB,4BAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["// import React, { Component , useState} from 'react';\n// import axios from 'axios';\n// import './App.css';\n// // import JsonDataDisplay from './Table.js';\n// // import Table from './Table.js';\n// import JsonData from './data.json'; // https://api.jsonserve.com/1ekkzf\n// // import PersonList from './PersonList.js';\n// // import Form from './Form.js';\n\n// function App() {\n\n//   // axios\n//   // .get('https://api.coindesk.com/v1/bpi/currentprice.json')\n//   // .then(response => (this.info = response));\n\n// //   var state = {\n// //     persons: []\n// //   };\n\n// //   var data;\n\n// //   const API = `http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`\n// // let temp;\n// // const fetchResult = fetch(API).then((res) => res.json()).then((data) => {temp = data});\n// // console.log(temp);\n\n//   // var FunctionName = async() => {\n//   //   const api_call = await fetch(`http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`);\n//   //   data = await api_call.json();\n//   //   console.log(data);\n//   //   return (data);\n//   //   }\n//   //   data = FunctionName();\n//   //   console.log(data);\n//   // const response = fetch(` http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`);\n//   //   const data = response.json();\n\n//     // axios.get(`http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`)\n//     //   .then(res => {\n//     //     const persons = res.data;\n//     //     this.setState({ persons });\n//     //   });\n//       // console.log(data);\n\n//   const [contacts, setContacts] = useState(JsonData);\n\n//   const [addFormData, setAddFormData] = useState(\n//     {\n//     id: \"\",\n//     name: \"\",\n//     city: \"\",\n//     }\n//   );\n\n//   const addForm = (event) => {\n//     event.preventDefault();  // отмена события\n//     const fieldName = event.target.getAttribute('name'); \n//     const fieldValue = event.target.value;\n  \n//     const newFormData = {...addFormData}; // копирует с возсожностью расширения\n//     newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n  \n//     setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n//   };\n\n//   const addFormSubmit = (event) => {\n//     event.preventDefault();// нужно для того чтобы при нажатии на кнопку страница не обновлялась\n  \n//     // console.log(Object.keys(JsonData).length);\n\n//     const newRow = {\n//       id: Object.keys(contacts).length + 1,\n//       name: addFormData.name,\n//       city: addFormData.city,\n//     };\n\n//     const newContact = [...contacts, newRow]; // добавляем в массив contacts новую строку\n//     setContacts(newContact); // обновляем данные\n//     // console.log(newContact);\n//     // console.log(contacts);\n//   };\n\n\n//   // render() {\n//     return (\n//       <div className=\"container\">\n//          <h1>MyApp Table</h1> \n//           {/* <Table /> */}\n//           <div>\n//             <table className=\"table table-striped\">\n//                 <thead>\n//                     <tr>\n//                     <th>ID</th>\n//                     <th>Name</th>\n//                     <th>City</th>\n//                     </tr>\n//                 </thead>\n//                  <tbody>\n//                     {contacts.map((info)=>(\n//                     <tr key={info.id}>\n//                         <td>{info.id}</td>\n//                         <td>{info.name}</td>\n//                         <td>{info.city}</td>\n//                         <button>Delete</button>\n//                     </tr>\n//                       ))}\n//                 </tbody>\n//                 {/* <PersonList/> */}\n                    \n//             </table>\n             \n//         </div>\n//           <h2>Add a contact</h2>\n//           <form className='form-inline' onSubmit={addFormSubmit}>\n//             <input type=\"text\" name=\"name\" className='form-control' required=\"required\" placeholder='Your name' onChange={addForm}/>\n//             <input type=\"text\" name=\"city\" className='form-control' required=\"required\" placeholder='Your city' onChange={addForm}/>\n//             <button type=\"submit\" className='btn btn-primary' >Add</button>\n// \t\t\t     </form>\n//       </div>\n//     );\n//   // }\n// }\n\n// export default App;\n\n\nimport PersonList from './components/PersonList.js';\n\nfunction App() {\n  return (\n    <div ClassName=\"App\">\n      <PersonList/>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}