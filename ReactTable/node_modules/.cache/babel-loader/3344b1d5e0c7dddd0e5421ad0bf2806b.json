{"ast":null,"code":"var _jsxFileName = \"/Users/saltmer/Desktop/crud-ui/src/App.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nexport async function deleteDataServ(id) {\n  try {\n    const response = await axios.delete(`http://178.128.196.163:3000/api/records/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log('Error', error.message);\n  }\n}\n;\nexport async function putDataServ(row) {\n  try {\n    let response = await axios.put('http://178.128.196.163:3000/api/records', row);\n    return response.data;\n  } catch (error) {\n    console.log('Error', error.message);\n  }\n}\n;\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [addFormData, setAddFormData] = useState({\n    name: \"\",\n    age: \"\",\n    email: \"\"\n  });\n\n  async function getDataServ() {\n    try {\n      let response = await axios.get('http://178.128.196.163:3000/api/records'); // console.log(\"get: \", response.data);\n\n      setContacts(response.data);\n    } catch (error) {\n      console.log('Error', error.message);\n    }\n  }\n\n  ;\n  useEffect(() => {\n    getDataServ(); // вызывается один раз\n  }, []);\n\n  async function deleteDataServ(contactId) {\n    try {\n      const response = await axios.delete(`http://178.128.196.163:3000/api/records/${contactId}`);\n      return response.data;\n    } catch (error) {\n      console.log('Error', error.message);\n    }\n  }\n\n  ;\n\n  const addForm = event => {\n    event.preventDefault(); // отмена события\n\n    const fieldName = event.target.getAttribute('name'); // что лежит в инпуте под name - это name and age and email\n\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    }; // копирует с возсожностью расширения\n\n    newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n\n    setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n  };\n\n  const addFormSubmit = event => {\n    event.preventDefault(); // нужно для того чтобы при нажатии на кнопку страница не обновлялась\n\n    const newRow = {\n      data: {\n        name: addFormData.name,\n        age: addFormData.age,\n        email: addFormData.email\n      }\n    };\n    let res = putDataServ(newRow); // посылаем на сервер наше новое значение\n\n    res.then(result => {\n      const newCont = [...contacts, result];\n      setContacts(newCont);\n    });\n  };\n\n  const deleteFunc = contactId => {\n    let del = deleteDataServ(contactId);\n    let newArr = contacts.filter(function (value) {\n      if (value._id !== contactId) return value;\n    });\n    setContacts(newArr);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  }, \"MyApp Table\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 18\n    }\n  }, contacts.map(info => /*#__PURE__*/React.createElement(\"tr\", {\n    key: info._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, info.data.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, info.data.age), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, info.data.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => deleteFunc(info._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, \"Delete\"))))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Add a contact\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    onSubmit: addFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control form-inline_input\",\n    placeholder: \"Your name\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"age\",\n    className: \"form-control form-inline_input\",\n    placeholder: \"Your age\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    className: \"form-control form-inline_input\",\n    placeholder: \"Your email\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Add\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saltmer/Desktop/crud-ui/src/App.js"],"names":["React","Component","useEffect","useState","axios","deleteDataServ","id","response","delete","data","error","console","log","message","putDataServ","row","put","App","contacts","setContacts","addFormData","setAddFormData","name","age","email","getDataServ","get","contactId","addForm","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","addFormSubmit","newRow","res","then","result","newCont","deleteFunc","del","newArr","filter","_id","map","info"],"mappings":"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","sourcesContent":["import React, { Component , useEffect, useState} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nexport async function deleteDataServ(id) {\n  try {\n    const response = await axios.delete(`http://178.128.196.163:3000/api/records/${id}`);\n    return response.data;\n  }\n  catch (error)\n  {\n    console.log('Error', error.message);\n  }\n};\n\nexport async function putDataServ (row) {\n  try {\n    let response = await axios.put('http://178.128.196.163:3000/api/records', row);\n    return response.data;\n  }\n  catch (error){\n    console.log('Error', error.message);\n  }\n};\n\nfunction App() {\n\n  const [contacts, setContacts] = useState([]);\n\n  const [addFormData, setAddFormData] = useState(\n    {\n      name: \"\",\n      age: \"\",\n      email: \"\",\n    }\n  );\n\nasync function getDataServ () {\n  try {\n    let response = await axios.get('http://178.128.196.163:3000/api/records');\n    // console.log(\"get: \", response.data);\n    setContacts(response.data); \n  }\n  catch (error) {\n      console.log('Error', error.message);\n  }\n};\n\n  useEffect(()=>{\n    getDataServ(); // вызывается один раз\n  }, []);\n\n    async function deleteDataServ(contactId) {\n      try {\n        const response = await axios.delete(`http://178.128.196.163:3000/api/records/${contactId}`);\n        return response.data;\n      }\n      catch (error)\n      {\n        console.log('Error', error.message);\n      }\n    };\n\n  const addForm = (event) => {\n    event.preventDefault();  // отмена события\n    const fieldName = event.target.getAttribute('name'); // что лежит в инпуте под name - это name and age and email\n    const fieldValue = event.target.value; \n  \n    const newFormData = {...addFormData}; // копирует с возсожностью расширения\n    newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n  \n    setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n  };\n\n  const addFormSubmit = (event) => {\n    event.preventDefault();// нужно для того чтобы при нажатии на кнопку страница не обновлялась\n\n    const newRow = {\n      data :\n      {\n        name: addFormData.name,\n        age: addFormData.age,\n        email: addFormData.email,\n      },\n    };\n\n    let res = putDataServ(newRow); // посылаем на сервер наше новое значение\n    res.then(result => \n      {\n        const newCont = [...contacts, result];\n        setContacts(newCont);\n      });\n  };\n\n  const deleteFunc = (contactId) => {\n   let del = deleteDataServ(contactId);\n\n    let newArr = contacts.filter(function(value) {\n      if (value._id !== contactId)\n        return value;\n    });\n    setContacts(newArr);\n  };\n\n    return (\n      <div className=\"container\">\n         <h1>MyApp Table</h1> \n          <div>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                    <th>Name</th>\n                    <th>Age</th>\n                    <th>Email</th>\n                    </tr>\n                </thead>\n                 <tbody>\n                    {contacts.map((info)=>(\n                    <tr key={info._id}>\n                        <td>{info.data.name}</td>\n                        <td>{info.data.age}</td>\n                        <td>{info.data.email}</td>\n                        <td><button className='btn btn-primary' onClick={()=>deleteFunc(info._id)}>Delete</button></td>\n                    </tr>\n                \n                      ))}\n                </tbody>\n                    \n            </table>\n             \n          </div>\n          <h2>Add a contact</h2>\n          <form className=\"form-inline\" onSubmit={addFormSubmit}>\n          <div className=\"form-group\">\n            <input type=\"text\" name=\"name\" className='form-control form-inline_input'  placeholder='Your name' onChange={addForm}/>\n            <input type=\"text\" name=\"age\" className='form-control form-inline_input'  placeholder='Your age' onChange={addForm}/>\n            <input type=\"text\" name=\"email\" className='form-control form-inline_input'  placeholder='Your email' onChange={addForm}/>\n            <button type=\"submit\" className='btn btn-primary' >Add</button>\n            </div>\n\t\t\t     </form>\n      </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}