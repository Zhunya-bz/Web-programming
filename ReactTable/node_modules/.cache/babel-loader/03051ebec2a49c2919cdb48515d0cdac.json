{"ast":null,"code":"var _jsxFileName = \"/Users/saltmer/Desktop/crud-ui/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // import JsonDataDisplay from './Table.js';\n// import Table from './Table.js';\n\nimport JsonData from './data.json'; // https://api.jsonserve.com/1ekkzf\n\nimport PersonList from './PersonList.js'; // import Form from './Form.js';\n\nfunction App() {\n  // axios\n  // .get('https://api.coindesk.com/v1/bpi/currentprice.json')\n  // .then(response => (this.info = response));\n  var state = {\n    persons: []\n  };\n  var data;\n  const API = `http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`;\n  let temp;\n  const fetchResult = fetch(API).then(res => res.json()).then(data => {\n    temp = data;\n  });\n  console.log(temp); // var FunctionName = async() => {\n  //   const api_call = await fetch(`http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`);\n  //   data = await api_call.json();\n  //   console.log(data);\n  //   return (data);\n  //   }\n  //   data = FunctionName();\n  //   console.log(data);\n  // const response = fetch(` http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`);\n  //   const data = response.json();\n  // axios.get(`http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`)\n  //   .then(res => {\n  //     const persons = res.data;\n  //     this.setState({ persons });\n  //   });\n  // console.log(data);\n\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    id: \"\",\n    name: \"\",\n    city: \"\"\n  });\n\n  const addForm = event => {\n    event.preventDefault(); // отмена события\n\n    const fieldName = event.target.getAttribute('name');\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    }; // копирует с возсожностью расширения\n\n    newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n\n    setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n  };\n\n  const addFormSubmit = event => {\n    event.preventDefault(); // нужно для того чтобы при нажатии на кнопку страница не обновлялась\n    // console.log(Object.keys(JsonData).length);\n\n    const newRow = {\n      id: Object.keys(contacts).length + 1,\n      name: addFormData.name,\n      city: addFormData.city\n    };\n    const newContact = [...contacts, newRow]; // добавляем в массив contacts новую строку\n\n    setContacts(newContact); // обновляем данные\n    // console.log(newContact);\n    // console.log(contacts);\n  }; // render() {\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }, \"MyApp Table\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"City\"))), /*#__PURE__*/React.createElement(PersonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Add a contact\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    onSubmit: addFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    required: \"required\",\n    placeholder: \"Your name\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control\",\n    required: \"required\",\n    placeholder: \"Your city\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Add\"))); // }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saltmer/Desktop/crud-ui/src/App.js"],"names":["React","Component","useState","axios","JsonData","PersonList","App","state","persons","data","API","temp","fetchResult","fetch","then","res","json","console","log","contacts","setContacts","addFormData","setAddFormData","id","name","city","addForm","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","addFormSubmit","newRow","Object","keys","length","newContact"],"mappings":"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","sourcesContent":["import React, { Component , useState} from 'react';\nimport axios from 'axios';\nimport './App.css';\n// import JsonDataDisplay from './Table.js';\n// import Table from './Table.js';\nimport JsonData from './data.json'; // https://api.jsonserve.com/1ekkzf\nimport PersonList from './PersonList.js';\n// import Form from './Form.js';\n\nfunction App() {\n\n  // axios\n  // .get('https://api.coindesk.com/v1/bpi/currentprice.json')\n  // .then(response => (this.info = response));\n\n  var state = {\n    persons: []\n  };\n\n  var data;\n\n  const API = `http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`\nlet temp;\nconst fetchResult = fetch(API).then((res) => res.json()).then((data) => {temp = data});\nconsole.log(temp);\n\n  // var FunctionName = async() => {\n  //   const api_call = await fetch(`http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`);\n  //   data = await api_call.json();\n  //   console.log(data);\n  //   return (data);\n  //   }\n  //   data = FunctionName();\n  //   console.log(data);\n  // const response = fetch(` http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`);\n  //   const data = response.json();\n\n    // axios.get(`http://www.filltext.com/?rows=10&id={index}&name={firstName}&city={city}`)\n    //   .then(res => {\n    //     const persons = res.data;\n    //     this.setState({ persons });\n    //   });\n      // console.log(data);\n\n  const [contacts, setContacts] = useState(data);\n\n  const [addFormData, setAddFormData] = useState(\n    {\n    id: \"\",\n    name: \"\",\n    city: \"\",\n    }\n  );\n\n  const addForm = (event) => {\n    event.preventDefault();  // отмена события\n    const fieldName = event.target.getAttribute('name'); \n    const fieldValue = event.target.value;\n  \n    const newFormData = {...addFormData}; // копирует с возсожностью расширения\n    newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n  \n    setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n  };\n\n  const addFormSubmit = (event) => {\n    event.preventDefault();// нужно для того чтобы при нажатии на кнопку страница не обновлялась\n  \n    // console.log(Object.keys(JsonData).length);\n\n    const newRow = {\n      id: Object.keys(contacts).length + 1,\n      name: addFormData.name,\n      city: addFormData.city,\n    };\n\n    const newContact = [...contacts, newRow]; // добавляем в массив contacts новую строку\n    setContacts(newContact); // обновляем данные\n    // console.log(newContact);\n    // console.log(contacts);\n  };\n\n\n  // render() {\n    return (\n      <div className=\"container\">\n         <h1>MyApp Table</h1> \n          {/* <Table /> */}\n          <div>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>City</th>\n                    </tr>\n                </thead>\n                 \n                <PersonList/>\n                    \n            </table>\n             \n        </div>\n          <h2>Add a contact</h2>\n          <form className='form-inline' onSubmit={addFormSubmit}>\n            <input type=\"text\" name=\"name\" className='form-control' required=\"required\" placeholder='Your name' onChange={addForm}/>\n            <input type=\"text\" name=\"city\" className='form-control' required=\"required\" placeholder='Your city' onChange={addForm}/>\n            <button type=\"submit\" className='btn btn-primary' >Add</button>\n\t\t\t     </form>\n      </div>\n    );\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}