{"ast":null,"code":"var _jsxFileName = \"/Users/saltmer/Desktop/crud-ui/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport Table from './Table.js';\nimport JsonData from './data.json';\n\nconst app2 = () => {\n  const [addFormData, setAddFormData] = useState({\n    id: \"\",\n    Name: \"\",\n    City: \"\"\n  });\n};\n\nconst addForm = event => {\n  // отмена события\n  event.preventDefault(); // нужно для того чтобы при нажатии на кнопку страница не обновлялась\n\n  const fieldName = event.target.getAttribute('name');\n  const fieldValue = event.target.value;\n  const newFormData = { ...addFormData\n  }; // копирует с возсожностью расширения\n\n  newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n\n  setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n};\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }\n    }, \"MyApp Table\"), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Add a contact\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      required: \"required\",\n      placeholder: \"Your name\",\n      onChange: addForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      required: \"required\",\n      placeholder: \"Your city\",\n      onChange: addForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Add\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saltmer/Desktop/crud-ui/src/App.js"],"names":["React","Component","useState","Table","JsonData","app2","addFormData","setAddFormData","id","Name","City","addForm","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,IAAI,GAAG,MAAK;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAC5C;AACAM,IAAAA,EAAE,EAAE,EADJ;AAEAC,IAAAA,IAAI,EAAE,EAFN;AAGAC,IAAAA,IAAI,EAAE;AAHN,GAD4C,CAA9C;AAOC,CARD;;AASA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AACAA,EAAAA,KAAK,CAACC,cAAN,GAFyB,CAED;;AAExB,QAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAlB;AACA,QAAMC,UAAU,GAAGL,KAAK,CAACG,MAAN,CAAaG,KAAhC;AAEA,QAAMC,WAAW,GAAG,EAAC,GAAGb;AAAJ,GAApB,CAPyB,CAOa;;AACtCa,EAAAA,WAAW,CAACL,SAAD,CAAX,GAAyBG,UAAzB,CARyB,CAQY;;AAErCV,EAAAA,cAAc,CAACY,WAAD,CAAd,CAVyB,CAUI;AAC9B,CAXD;;AAaA,MAAMC,GAAN,SAAkBnB,SAAlB,CAA4B;AAI1BoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,eAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAC,UAAxC;AAAmD,MAAA,WAAW,EAAC,WAA/D;AAA2E,MAAA,QAAQ,EAAEV,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA8B,MAAA,QAAQ,EAAC,UAAvC;AAAkD,MAAA,WAAW,EAAC,WAA9D;AAA0E,MAAA,QAAQ,EAAEA,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CAJJ,CADF;AAYD;;AAjByB;;AAoB5B,eAAeS,GAAf","sourcesContent":["import React, { Component , useState} from 'react';\nimport './App.css';\nimport Table from './Table.js';\nimport JsonData from './data.json';\n\nconst app2 = () =>{\nconst [addFormData, setAddFormData] = useState(\n  {\n  id: \"\",\n  Name: \"\",\n  City: \"\",\n  }\n)\n}\nconst addForm = (event) => {\n  // отмена события\n  event.preventDefault(); // нужно для того чтобы при нажатии на кнопку страница не обновлялась\n\n  const fieldName = event.target.getAttribute('name'); \n  const fieldValue = event.target.value;\n\n  const newFormData = {...addFormData}; // копирует с возсожностью расширения\n  newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n\n  setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n}\n\nclass App extends Component {\n\n\n\n  render() {\n    return (\n      <div className=\"container\">\n         <h1>MyApp Table</h1> \n          <Table />\n          <h2>Add a contact</h2>\n          <form>\n            <input type=\"text\" name=\"name\" required=\"required\" placeholder='Your name' onChange={addForm}/>\n            <input type=\"text\" name=\"city\"required=\"required\" placeholder='Your city' onChange={addForm}/>\n            <button type=\"submit\">Add</button>\n\t\t\t     </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}