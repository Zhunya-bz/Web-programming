{"ast":null,"code":"var _jsxFileName = \"/Users/saltmer/Desktop/crud-ui/src/App.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // import JsonDataDisplay from './Table.js';\n// import Table from './Table.js';\n\nimport JsonData from './data.json'; // https://api.jsonserve.com/1ekkzf\n// import PersonList from './PersonList.js';\n// import Form from './Form.js';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [addFormData, setAddFormData] = useState({\n    id: \"\",\n    name: \"\",\n    city: \"\"\n  });\n  useEffect(() => {\n    axios.get(`http://178.128.196.163:3000/api/records`).then(res => {\n      const persons = res.data;\n      setContacts({\n        persons\n      });\n      console.log(persons);\n    });\n  });\n  console.log(persons);\n\n  const addForm = event => {\n    event.preventDefault(); // отмена события\n\n    const fieldName = event.target.getAttribute('name'); // что лежит в инпуте под name - это name and city\n\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    }; // копирует с возсожностью расширения\n\n    newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n\n    setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n  };\n\n  const addFormSubmit = event => {\n    event.preventDefault(); // нужно для того чтобы при нажатии на кнопку страница не обновлялась\n    // console.log(Object.keys(JsonData).length);\n\n    const getMaxIndex = () => {\n      var max = contacts[0].id;\n\n      for (var i = 0; i < contacts.length; i++) {\n        if (contacts[i].id > max) max = contacts[i].id;\n      }\n\n      return max;\n    };\n\n    var max = getMaxIndex(); // console.log(max);\n\n    const newRow = {\n      id: max + 1,\n      name: addFormData.name,\n      city: addFormData.city\n    };\n    const newContact = [...contacts, newRow]; // добавляем в массив contacts новую строку\n\n    setContacts(newContact); // обновляем данные\n    // console.log(newContact);\n    // console.log(contacts);\n  };\n\n  const deleteFunc = contactId => {\n    const newContacts = [...contacts];\n    const index = newContacts.findIndex(item => item.id == contactId);\n    newContacts.splice(index, 1); // удалить в newContacts начинаю с номера index один элемент\n\n    setContacts(newContacts);\n  }; // render() {\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }, \"MyApp Table\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"City\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }\n  }, contacts.map(info => /*#__PURE__*/React.createElement(\"tr\", {\n    key: info.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, info.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, info.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, info.city), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => deleteFunc(contacts.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"Delete\"))))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Add a contact\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    onSubmit: addFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control form-inline_input\",\n    required: \"required\",\n    placeholder: \"Your name\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control form-inline_input\",\n    required: \"required\",\n    placeholder: \"Your city\",\n    onChange: addForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Add\")))); // }\n}\n\nexport default App; // import React from 'react';\n// import PersonList from './PersonList.js';\n// import PersonRemove from './PersonRemove';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <PersonList/>\n//       <PersonRemove/>\n//     </div>\n//   )\n// }\n// export default App;","map":{"version":3,"sources":["/Users/saltmer/Desktop/crud-ui/src/App.js"],"names":["React","Component","useEffect","useState","axios","JsonData","App","contacts","setContacts","addFormData","setAddFormData","id","name","city","get","then","res","persons","data","console","log","addForm","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","addFormSubmit","getMaxIndex","max","i","length","newRow","newContact","deleteFunc","contactId","newContacts","index","findIndex","item","splice","map","info"],"mappings":"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","sourcesContent":["import React, { Component , useEffect, useState} from 'react';\nimport axios from 'axios';\nimport './App.css';\n// import JsonDataDisplay from './Table.js';\n// import Table from './Table.js';\nimport JsonData from './data.json'; // https://api.jsonserve.com/1ekkzf\n// import PersonList from './PersonList.js';\n// import Form from './Form.js';\n\nfunction App() {\n\n  const [contacts, setContacts] = useState([]);\n\n\n  const [addFormData, setAddFormData] = useState(\n    {\n    id: \"\",\n    name: \"\",\n    city: \"\",\n    }\n  );\n\n  useEffect(()=>{\n    axios.get(`http://178.128.196.163:3000/api/records`)\n      .then(res => {\n        const persons = res.data;\n        setContacts({ persons });\n        console.log(persons);\n      })\n  })\n  console.log(persons);\n\n  const addForm = (event) => {\n    event.preventDefault();  // отмена события\n    const fieldName = event.target.getAttribute('name'); // что лежит в инпуте под name - это name and city\n    const fieldValue = event.target.value; \n  \n    const newFormData = {...addFormData}; // копирует с возсожностью расширения\n    newFormData[fieldName] = fieldValue; //заполняем массив новыми значениями\n  \n    setAddFormData(newFormData); // обновляем наш  addFormData, изначально был пустым\n  };\n\n  const addFormSubmit = (event) => {\n    event.preventDefault();// нужно для того чтобы при нажатии на кнопку страница не обновлялась\n  \n    // console.log(Object.keys(JsonData).length);\n    const getMaxIndex = () => {\n      var max = contacts[0].id;\n      for (var i = 0; i < contacts.length; i++)\n      {\n        if (contacts[i].id > max)\n          max = contacts[i].id;\n      }\n      return max;\n    }\n    var max = getMaxIndex();\n  // console.log(max);\n\n\n    const newRow = {\n      id: max + 1,\n      name: addFormData.name,\n      city: addFormData.city,\n    };\n\n    const newContact = [...contacts, newRow]; // добавляем в массив contacts новую строку\n    setContacts(newContact); // обновляем данные\n    // console.log(newContact);\n    // console.log(contacts);\n  };\n\n  const deleteFunc = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = newContacts.findIndex(item => item.id == contactId);\n\n    newContacts.splice(index, 1); // удалить в newContacts начинаю с номера index один элемент\n    setContacts(newContacts);\n  };\n\n\n  // render() {\n    return (\n      <div className=\"container\">\n         <h1>MyApp Table</h1> \n          <div>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>City</th>\n                    </tr>\n                </thead>\n                 <tbody>\n                    {contacts.map((info)=>(\n                    <tr key={info.id}>\n                        <td>{info.id}</td>\n                        <td>{info.name}</td>\n                        <td>{info.city}</td>\n                        {/* <PersonList/> */}\n                        <td><button className='btn btn-primary' onClick={()=>deleteFunc(contacts.id)}>Delete</button></td>\n                    </tr>\n                \n                      ))}\n                </tbody>\n                    \n            </table>\n             \n          </div>\n          <h2>Add a contact</h2>\n          <form className=\"form-inline\" onSubmit={addFormSubmit}>\n          <div className=\"form-group\">\n            <input type=\"text\" name=\"name\" className='form-control form-inline_input' required=\"required\" placeholder='Your name' onChange={addForm}/>\n            <input type=\"text\" name=\"city\" className='form-control form-inline_input' required=\"required\" placeholder='Your city' onChange={addForm}/>\n            <button type=\"submit\" className='btn btn-primary' >Add</button>\n            </div>\n\t\t\t     </form>\n          {/* <PersonList/> */}\n      </div>\n    );\n  // }\n}\n\nexport default App;\n\n// import React from 'react';\n// import PersonList from './PersonList.js';\n// import PersonRemove from './PersonRemove';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <PersonList/>\n//       <PersonRemove/>\n//     </div>\n//   )\n// }\n// export default App;"]},"metadata":{},"sourceType":"module"}